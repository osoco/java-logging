/*
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
project.version = '0.6'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.9'
        classpath 'net.saliman:gradle-cobertura-plugin:2.4.0'
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'org.asciidoctor.convert'
apply plugin: "net.saliman.cobertura"

repositories {
    mavenCentral()
    maven {
        url 'http://nexus.osoco.es/repository/maven-public'
    }
}

ext.targetJavaVersion = JavaVersion.VERSION_1_8

configurations {
    checkerFrameworkAnnotatedJDK {
        description = 'a copy of JDK classes with Checker Framework type qualifers inserted'
    }
    checkerFramework {
        description = 'The Checker Framework: custom pluggable types for Java'
    }
}

dependencies {
    compile group: 'io.github.lukehutch', name: 'fast-classpath-scanner', version: '2.20.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.0'
    compile group: 'com.amazonaws', name: 'aws-lambda-java-core', version: '1.1.0'
    compile group: 'com.amazonaws', name: 'aws-lambda-java-events', version: '1.1.0'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.12'
    compile group: 'org.elasticsearch.client', name: 'rest', version: '5.1.2'
    compile group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.5'
    compile group: 'org.apache.httpcomponents', name: 'httpcore-nio', version: '4.4.5'
    compile group: 'org.apache.httpcomponents', name: 'httpasyncclient', version: '4.1.2'
    compile group: 'commons-validator', name: 'commons-validator', version: '1.6'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
    compile group: 'me.nallar.whocalled', name: 'WhoCalled', version: '1.1'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.4.4'
    testCompile group: 'org.spockframework', name: 'spock-core', version: '1.0-groovy-2.4'
    testRuntime group: 'org.slf4j', name: 'slf4j-api', version: '1.7.10'
    testCompile group: 'info.cukes', name: 'cucumber-groovy', version: '1.2.5'
    testCompile group: 'info.cukes', name: 'cucumber-junit', version: '1.2.5'

    testCompile group: 'info.cukes', name: 'cucumber-picocontainer', version: '1.2.5'
    testCompile group: 'org.picocontainer', name: 'picocontainer', version: '2.14'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'

    testCompile group: 'cglib', name: 'cglib-nodep', version: '3.2.4'
    testCompile group: 'org.objenesis', name: 'objenesis', version: '2.4'

    ext.checkerFrameworkVersion = '2.1.6'
    ext.jdkVersion = 'jdk8'
    checkerFrameworkAnnotatedJDK "org.checkerframework:${jdkVersion}:${checkerFrameworkVersion}"

    //    checkerFrameworkJavac "org.checkerframework:compiler:${checkerFrameworkVersion}"
    checkerFramework "org.checkerframework:checker:${checkerFrameworkVersion}"
    compile "org.checkerframework:checker-qual:${checkerFrameworkVersion}"
}

apply plugin: 'maven'

task buildZip(type: Zip) {
    baseName = "bbva-ats-forms"
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtime
    }
}

build.dependsOn buildZip

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
}

test {
    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
    }
    systemProperties System.getProperties()
    outputs.upToDateWhen { false }
}


tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

task generateCukesDoc(type: JavaExec) {
    classpath buildscript.configurations.classpath
    main = 'com.github.cukedoctor.CukedoctorMain'
    args = ['-o', 'build/cucumber/living-specs.adoc',
            '-p', 'build/reports/cucumber/cucumber.json',
            '-toc', 'left',
            '-t', '\"BBVA-ATS-Forms Living Specs\"']
}

asciidoctor {
    dependsOn generateCukesDoc
    sourceDir = file('src/docs')
    outputDir = file("${buildDir}/docs")
    separateOutputDirs = true
    options doctype: 'book'

    System.setProperty("cukedoctor.disable.filter", "true")
    System.setProperty("cukedoctor.disable.theme", "true")

    backends = ['html5']
    attributes 'source-highlighter': 'coderay',
            'coderay-linenums-mode': 'table',
            icon: 'font',
            linkattrs: true,
            encoding: 'utf-8'
}

asciidoctor.doFirst {
    copy {
        from "${buildDir}/cucumber"
        into "src/docs"
        include 'living-specs.adoc'
    }
}

if (project.hasProperty('doc')) {
    test.finalizedBy asciidoctor
}

allprojects {
    tasks.withType(JavaCompile).all { JavaCompile compile ->
        compile.options.compilerArgs = [
                '-processor', 'org.checkerframework.checker.nullness.NullnessChecker',
                '-processorpath', "${configurations.checkerFramework.asPath}",
                // uncomment to turn Checker Framework errors into warnings
                '-Awarns',
                '-AprintErrorStack',
                "-Xbootclasspath/p:${configurations.checkerFrameworkAnnotatedJDK.asPath}"
        ]
    }
}

test {
    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
    }

    outputs.upToDateWhen { false }
}
